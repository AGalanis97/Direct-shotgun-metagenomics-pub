# Direct shotgun metagenomics captures species abundance of honey samples
# R script author: Anastasios Galanis, 2020
# This script will INSTALL packages that have not been previously installed. 
# If you do not wish to install new packages, please avoid running this script.

# This script will reproduce Figures 3A, 3B (30 most abundant species) and 3C but will also create similar Figures to 3B for Family and Genus levels
# This script is written in R version 3.6.3

# Load or install (if not present) the required packages
if (!require('tidyverse')) install.packages('tidyverse'); library('tidyverse')
if (!require('here')) install.packages('here'): library('here')

if (!require('RColorBrewer')) install.packages('RColorBrewer'); library('RColorBrewer')


flowering_period <- read.csv("./Figures/Figure_10/plant_flowering_table.csv")



mycolors <- colorRampPalette(brewer.pal(8, "Dark2"))(18)

flowering_plot <- ggplot(flowering_period, aes(x=flowering_period$ï..Identified_species_metagenomic, color=ï..Identified_species_metagenomic))+
  geom_linerange(aes(ymin=Month_start,ymax=Month_end),linetype=1, size=2, alpha=0.7)+
  geom_point(aes(y=Month_start),size=4)+
  geom_point(aes(y=Month_end),size=4)+ theme_bw() + theme(legend.position = "none",axis.text.x = element_text(angle = 45, vjust = 0.5)) + 
   scale_color_manual(values = mycolors) + coord_flip() + scale_y_continuous(breaks = c(1,2,3,4,5,6,7,8,9,10,11,12), limits = c(1,12), labels =  c("January","February","March","April","May","June","July","August","September","October","November","December")) + labs(x="",y="Flowering range")


ggsave(plot = flowering_plot,filename = "./Figures/Figure_10/flowering_plot_plants.pdf")



# LEGACY DO NOT RUN
normalised_species <- as.data.frame(read.csv("./Figures/Figure_3/normalised_methodseason_species_filtered2.csv")[,-1])

Relative_abundance_species_plants$Taxonomic_ID <- as.character(Relative_abundance_species_plants$Taxonomic_ID)


normalised_species_plants <- normalised_species %>% filter(Phylum == "Streptophyta",) 
sum_normalised_species_plants <- as.data.frame(rowSums(normalised_species_plants[,2:9]))
sum_normalised_species_plants$Species <- normalised_species_plants$Species
sum_normalised_species_plants$Genus <- normalised_species_plants$Genus
colnames(sum_normalised_species_plants) <- c("Abundance","Species","Genus")
sum_Relative_abundance_species_plants <- sum_normalised_species_plants %>% mutate_at(.,.vars = "Abundance",funs((./sum(.))*100))

sum_abundance_top20 <- (sum_Relative_abundance_species_plants[order(sum_Relative_abundance_species_plants$Abundance, decreasing = T),])[1:20,]

data_dsmh4 <- Relative_abundance_species_plants[,c(1,10)]
data_dsmh4 <- (data_dsmh4[order(data_dsmh4$DirectSM_H4, decreasing = T),])[1:10,]

data_sum_abundance <- as.data.frame(rowMeans(Relative_abundance_species_plants[1:8]))
data_sum_abundance$species <- Relative_abundance_species_plants$Species

Hive4_conv_genus <- gsub("\\s*\\w*$", "", Hive4_plants$Species) %>% as.data.frame() %>% rename(., Genus = .) %>% cbind(Hive4_plants,.)


#Function to get flower colour, flowering begin, flowering duration, plant height. They are placed in the same data frame including the Hive number as a factor
Plants_BIEN_flowering <- function(df){
  plant_names <- df %>% dplyr::pull(.,Genus) %>% as.character()
  flowering_begin <- plant_names %>% BIEN::BIEN_trait_traitbygenus(genus = ., trait = "plant flowering begin", all.taxonomy = FALSE, political.boundaries = T, source.citation = FALSE) %>% dplyr::rename(flowering_begin_month = trait_value) %>% dplyr::filter(unit == "month")
}


%>% dplyr::rename(flowering_begin_month = trait_value) %>% dplyr::filter(unit == "month") %>%  dplyr::select(c(scrubbed_genus,flowering_begin_month))  


top20_flowering <- Plants_BIEN_flowering(sum_abundance_top20)

# Manual inspection indicates that some flowering times come from southern hemishere so we need to replace
top20_flowering[12,4] <- 12
top20_flowering[17,4] <- 7
top20_flowering[31,4] <- 4
top20_flowering[32,4] <- 3
top20_flowering[37,4] <- 2
top20_flowering[41,4] <- 4
top20_flowering[43,4] <- 2
top20_flowering[81,4] <- 4
top20_flowering[83,4] <- 2
top20_flowering[92,4] <- 4
top20_flowering[102,4] <- 8
top20_flowering[118,4] <- 2
top20_flowering[121,4] <- 2
top20_flowering[123,4] <- 10
top20_flowering[130,4] <- 8
top20_flowering[137,4] <- 7
top20_flowering[161,4] <- 7


get_ranges <- function(df_1){
  df <- df_1[,c(1,4)]
  colnames(df) <- c("Genus","flowering_begin_month")
  df$flowering_begin_month <- as.numeric(df$flowering_begin_month)
  df_2 <- df %>% mutate_at(c("flowering_begin_month"),~replace(., is.na(.), 0)) %>% select(c("Genus","flowering_begin_month")) %>% filter(rowSums(select(.,-Genus)) > 0)
}

top20_flowering_occurences <- get_ranges(top20_flowering)
top20_flowering_occurences$Genus <- as.factor(top20_flowering_occurences$Genus)

flowering_plot <- ggplot(top20_flowering_occurences, aes(y=Genus, x=flowering_begin_month,  fill=Genus)) +
  geom_density_ridges(alpha=0.6, stat="binline", bins=14) +
  theme_ridges(grid = T) + labs(x = "", y="") +
  theme(
    legend.position="none",
    panel.spacing = unit(0.1, "lines"),
    strip.text.x = element_text(size = 8),
    axis.text.x = element_text(angle = 45)) + scale_x_continuous(limits = c(0,13), breaks = c(1,2,3,4,5,6,7,8,9,10,11,12), labels = c("January","February","March","April","May","June","July","August","September","October","November","December"))

