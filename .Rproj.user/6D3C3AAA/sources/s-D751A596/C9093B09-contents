# Direct shotgun metagenomics captures species abundance of honey samples
# R script author: Anastasios Galanis, 2020
# This script will INSTALL packages that have not been previously installed. 
# If you do not wish to install new packages, please avoid running this script.

# This script will reproduce Figures 2 A, B, and C
# This script is written in R version 3.6.3

# Load or install (if not present) the required packages
if (!require('tidyverse')) install.packages('tidyverse'); library('tidyverse')
if (!require('stringr')) install.packages('stringr'); library('stringr')
if (!require('ggplot2')) install.packages('ggplot2'); library('ggplot2')
if (!require('ggsci')) install.packages('ggsci'); library('ggsci')
if (!require('here')) install.packages('here'); library('here')


# Read the necessary classification resultfiles specific to Viridiplantae at Species level
plant_species <- list.files(path = "./Figures/Figure_2/Data_fig_2", recursive = TRUE, pattern = "species_plants.csv")

comparison_species_plants <- plant_species %>%
  setNames(nm = .) %>%
  map_df(read.csv, .id = "file name")

comparison_species_plants$Software <- factor(comparison_species_plants$Software, levels = c("Mock","CCMetagen","DIAMOND","kraken2","minimap2"))

stacked_barplot_species_plants <- ggplot() + geom_bar(aes(y = Observed_Abundance, x = Software, fill= Species), data = comparison_species_plants, stat='identity', width=0.3, position="fill") + theme(legend.position = 'bottom', legend.text = element_text(size = 10), plot.title = element_text(hjust = 0.5)) + scale_fill_rickandmorty() + theme_bw(base_size =15) + scale_y_continuous(labels = function(x) paste0(x*100, "%"))

final_barplot_species_plants <- print(stacked_barplot_species_plants + labs(title= "Comparison Viridiplantae Species level",y="Observed Abundance (%)", x = ""))

# Export image as PDF
ggsave(filename="final_barplot_species_plants.pdf",plot = final_barplot_species_plants, width = 9, device = "pdf")

# Same code as above, but for Genus level
plant_genus <- list.files(path = "./Data_fig_2", recursive = TRUE, pattern = "genus_plants.csv")

comparison_genus_plants <- plant_genus %>%
  setNames(nm = .) %>%
  map_df(read.csv, .id = "file name")

comparison_genus_plants$Software <- factor(comparison_genus_plants$Software, levels = c("Mock","CCMetagen","DIAMOND","kraken2","MG-RAST", "minimap2"))

stacked_barplot_genus_plants <- ggplot() + geom_bar(aes(y = Observed_Abundance, x = Software, fill= Genus), data = comparison_genus_plants, stat='identity', width=0.3, position = "fill") + theme(legend.position = 'bottom', legend.text = element_text(size = 8)) + scale_fill_rickandmorty() + theme_bw(base_size =15) + scale_y_continuous(labels = function(x) paste0(x*100, "%"))

final_barplot_genus_plants <- print(stacked_barplot_genus_plants + labs(title= "Comparison Viridiplantae Genus level",y="Observed Abundance (%)", x = ""))

ggsave(filename="final_barplot_genus_plants.pdf",plot = final_barplot_genus_plants, device = "pdf", width = 9)

# Other dataset
others_dataset <- list.files(path = "./Data_fig_2", recursive = TRUE, pattern = "others.csv")

comparison_others <- others_dataset %>%
  setNames(nm = .) %>%
  map_df(read.csv, .id = "file name")

comparison_others$Software <- factor(comparison_others$Software, levels = c("Mock","CCMetagen","DIAMOND","kraken2","minimap2"))

stacked_barplot_others <- ggplot() + geom_bar(aes(y = Observed_Abundance, x = Software, fill= Species), data = comparison_others, stat='identity', width=0.3, position="fill") + theme(legend.position = 'bottom', legend.text = element_text(size = 8)) + scale_fill_rickandmorty() + theme_bw(base_size = 15) + scale_y_continuous(labels = function(x) paste0(x*100, "%"))

final_barplot_others <- print(stacked_barplot_others + labs(title= "Comparison for other organisms (non-Viridiplantae)",y="Observed Abundance (%)", x = ""))

ggsave(filename="final_barplot_others.pdf",plot = final_barplot_others, device = "pdf", width = 9, height = 5)

