facet_tree_simulation <- ggtree(simulations_tree)
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, aes(x=Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, aes(x=Genome_size), geom = geom_point)
simulations_tree <- ggtree("./Figures/Figure_5/Data_fig_5/simulations_tree_data.nexus")
simulations_tree <- read.nexus("./Figures/Figure_5/Data_fig_5/simulations_tree_data.nexus")
facet_tree_simulation <- ggtree(simulations_tree)
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, aes(x=Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, aes(x=Genome_size), geom = geom_point)
simulations_tree <- read.nexus("./Figures/Figure_5/Data_fig_5/simulations_tree_data.nexus")
facet_tree_simulation <- ggtree(simulations_tree)
View(facet_tree_simulation)
rownames(facet_tree_simulation)
facet_tree_simulation$labels
simulations_tree@phylo[["tip.label"]]
View(simulations_tree)
simulations_tree[["tip.label"]]
simulations_tree[["tip.label"]]
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, aes(x=Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, aes(x="Genome_size"), geom = geom_point)
neworganisms_simulation$Species <- simulations_tree$tip.label
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, aes(x=Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
organisms_simulation <- read.csv("./Figures/Figure_5/Data_fig_5/organisms.csv")
organisms_simulation$Genome_size <- as.numeric(levels(organisms_simulation$Genome_size))[organisms_simulation$Genome_size]
neworganisms_simulation <- organisms_simulation[-1]
neworganisms_simulation$Genome_size[46] <- 22103.6
neworganisms_simulation$Genome_size <- log10(neworganisms_simulation$Genome_size)
neworganisms_simulation$Species <- gsub(" ", "_", neworganisms_simulation$Species, fixed = TRUE)
neworganisms_simulation <- neworganisms_simulation[,c(1:3)]
facet_tree_simulation <- ggtree(simulations_tree)
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, aes(x=Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
facet_tree_simulation
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, aes(x=Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, aes(x=Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3)
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, .panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_simulation$Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
rownames(facet_tree_simulation)
simulations_tree$tip.label
View(facet_tree_simulation)
facet_tree_simulation[["data"]][["label"]]
simulations_tree <- read.nexus("./Figures/Figure_5/Data_fig_5/simulations_tree_data.nexus")
annotated_tree_simulations <- ggtree(simulations_tree) + geom_cladelabel(node=67, label="Eukaryota", align=T, fontsize=8, offset = 16) + geom_cladelabel(node=87, label="Bacteria", align=T, fontsize=8, offset = 16) + geom_cladelabel(node=66, label="Viruses", align=T, fontsize=8, offset = 16) + geom_tiplab(align = TRUE, offset = 1, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim(c(0,50)) + geom_balance(node=76, fill='green', color='white', alpha=0.3, extend=1) + geom_hilight(node=87, fill="brown", alpha = 0.2, extend = 5) + geom_hilight(node=67, fill="lightblue", alpha = 0.3, extend = 1) + geom_hilight(node=66, fill="violet", alpha = 0.2, extend = 21)
annotated_tree_simulations
facet_tree_simulation <- ggtree(simulations_tree)
neworganisms_simulation$Species <- facet_tree_simulation[["data"]][["label"]]
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = organisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = neworganisms_simulation, mapping = aes(x=organisms_Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = neworganisms_simulation, mapping = aes(x=Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = neworganisms_simulation, mapping = aes(x=Genome_size), geom = geom_point)
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = neworganisms_simulation, mapping = aes(x=Genome_size), geom = geom_point)
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = neworganisms_simulation, mapping = aes(x=Genome_size), geom = geom_point)
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = neworganisms_simulation, mapping = aes(x=Genome_size), geom = geom_point)
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = neworganisms_simulation, mapping = aes(x=Genome_size), geom = geom_point)
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = neworganisms_simulation, mapping = aes(x=Genome_size), geom = geom_point)
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = neworganisms_simulation, mapping = aes(x=Genome_size), geom = geom_point)
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = neworganisms_simulation, mapping = aes(x=Genome_size), geom = geom_point)
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = neworganisms_simulation, mapping = aes(y=Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = neworganisms_simulation, mapping = aes(x=Genome_size), geom = geom_barh) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
library(ggtree)
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = neworganisms_simulation, mapping = aes(x=Genome_size), geom = geom_barh) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = neworganisms_simulation, mapping = aes(x=Genome_size), geom = geom_point()) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = neworganisms_simulation, mapping = aes(x=Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
facet_tree_simulation[["data"]][["label"]]
neworganisms_simulation$Species <- simulations_tree$tip.label
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = neworganisms_simulation, mapping = aes(x=Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree@phylo[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = neworganisms_simulation, mapping = aes(x=Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
final_facet_tree_simulation <- first_plot + geom_facet(panel = "GC content (%)", data = organisms_simulation, aes(x=GC_count), geom = geom_point)
final_facet_tree_simulation <- first_plot + geom_facet(panel = "GC content (%)", data = neworganisms_simulation, aes(x=GC_count), geom = geom_point)
final_facet_tree_simulation
first_plot <- facet_plot(annotated_tree_simulations, panel = "Genome size (Mb; log10)", data = neworganisms_simulation, mapping = aes(x=Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
first_plot <- facet_plot(facet_tree_simulation, panel = "Genome size (Mb; log10)", data = neworganisms_simulation, mapping = aes(x=Genome_size), geom = geom_point) + xlim_expand(c(-3, 5), panel = "Genome size (Mb; log10)") + geom_tiplab(align = TRUE, parse = FALSE, size=3, label = gsub("_", " ", simulations_tree[["tip.label"]]), fontface="italic") + xlim_tree(c(0,350)) + theme_tree2()
final_facet_tree_simulation <- first_plot + geom_facet(panel = "GC content (%)", data = neworganisms_simulation, aes(x=GC_count), geom = geom_point)
facet_widths(final_facet_tree_simulation, c(Tree = 0.5))
final_facet_tree_simulation <- first_plot + geom_facet(panel = "GC content (%)", data = neworganisms_simulation, aes(x=GC_count), geom = geom_point)
facet_widths(final_facet_tree_simulation, c(Tree = 0.5))
ggsave(plot=final_facet_tree_simulation, filename="tree_plot_genome_size.pdf", height = 10, width = 8)
if (!require('tidyverse')) install.packages('tidyverse'); library('tidyverse')
if (!require('purrr')) install.packages('purrr'); library('purrr')
if (!require('taxonomizr')) install.packages('taxonomizr'); library('taxonomizr')
if (!require('here')) install.packages('here'): library('here')
# Taxonomizr will return the taxonomy for each species. However, this requires that a database is built locally (requires 60 GB of space).
# prepareDatabase('accessionTaxa.sql')
# This process will take over 3 hours on a regular laptop/PC.
# from here: and simply unzip it in the cloned repository. Place it at the top level, honeyDSM-seq and not in the subfolders.
if (!require('DESeq2')) install.packages('DESeq2'); library('DESeq2')
if (!require('pheatmap')) install.packages('pheatmap'): library('pheatmap')
if (!require('EnhancedVolcano')) BiocManager::install('EnhancedVolcano'): library('EnhancedVolcano')
# Significantly abundant species per season
Hives_dds_species_v2 <- DESeqDataSetFromMatrix(countData = Hives_comparison_species, colData = hives_metadata, design = ~Hive + Season, tidy = TRUE)
Hives_dds_RLE_species_v2 <- estimateSizeFactors(Hives_dds_species_v2,type = "ratio")
species_volcano_plot <- get_volcano_plot(Hives_dds_RLE_species_v2, contrast = c('Method','Direct_SM','SM'), annotation = Taxid_taxonomy_species)
species_volcano_plot <- get_volcano_plot(Hives_dds_RLE_species_v2, contrast = c('Season','May','November'), annotation = Taxid_taxonomy_species)
species_volcano_plot
species_volcano_plot <- get_volcano_plot(Hives_dds_RLE_species_v2, contrast = c('Season','July','November'), annotation = Taxid_taxonomy_species)
species_volcano_plot
differentially_abundant_species <- plotDiffAbund(
DESeq_RLE_object =Hives_dds_species_v3,
colNums = c(1:8),
level = "species")
plotDiffAbund(
DESeq_RLE_object =Hives_dds_species_v2,
colNums = c(1:8),
level = "species")
getwd()
getwd()
plotDiffAbund(
DESeq_RLE_object =Hives_dds_species_v2,
colNums = c(1:8),
level = "species")
Hives_dds_species_v3 <- DESeqDataSetFromMatrix(countData = Hives_comparison_species, colData = hives_metadata, design = ~Method + Season, tidy = TRUE)
Hives_dds_RLE_species_v3 <- estimateSizeFactors(Hives_dds_species_v3,type = "ratio")
plotDiffAbund(
DESeq_RLE_object =Hives_dds_species_v3,
colNums = c(1:8),
level = "species")
plotDiffAbund(
DESeq_RLE_object =Hives_dds_species_v3,
colNums = c(1:8),
level = "species")
plotDiffAbund(
DESeq_RLE_object =Hives_dds_species_v3,
colNums = c(1:8),
level = "species")
plotDiffAbund <- function(colNums, DESeq_RLE_object, title, level = c("species","genus","family","order","phylum")) {
dds_object <- DESeq(DESeq_RLE_object)
rld <- rlog(dds_object, blind=F)
results <- subset(results(dds_object, contrast=c("Season","May","November")), padj < 0.05)
# make the lists
upgenes <- rownames(head(results[ order( results$log2FoldChange ), ], n=40))
downgenes <- rownames(head(results[ order( -results$log2FoldChange ), ], n=40))
# this gives us the rows we want
rows <- match(upgenes, row.names(rld))
mat <- assay(rld)[rows,c(1:8)]
mat <- mat - rowMeans(mat)
TaxonomicIDs_species <- as.numeric(rownames((mat)))
Taxid_taxonomy_species <- as.data.frame(get_super_kingdom_or_plant(TaxonomicIDs_species))
Taxonomic_IDs_dataframe_species <- as.data.frame(TaxonomicIDs_species)
generate_species <- getTaxonomy(TaxonomicIDs_species,desiredTaxa = level, 'accessionTaxa.sql')
generate_species = as.data.frame(generate_species)
generate_species[,1] = as.character(generate_species[,1])
annotationrows_species1 <- bind_cols(Taxid_taxonomy_species,Taxonomic_IDs_dataframe_species,generate_species)
colnames(annotationrows_species1) <- c("Domain", "Taxonomic_ID", level)
annotationrows_species1 = annotationrows_species1[,-2]
annotationrows_species1 <- tibble::column_to_rownames(annotationrows_species1, var = level)
rownames(mat) <- generate_species[,1]
# the labels are hard coded at the moment :(
df <- as.data.frame(colData(rld)[c("Season")])
pheatmap(mat, fontsize=15, annotation_colors = ann_colors, annotation_row = annotationrows_species1, cluster_rows = FALSE, show_rownames = TRUE, height = 100, angle_col = "270", cluster_cols = TRUE, show_colnames = TRUE, border_color = NA, annotation_col = df, labels_col = c("DirectSM H4","DirectSM H5","DirectSM H6" ,"DirectSM H7","SM H4", "SM H5","SM H6","SM H7"), scale = 'row')
}
getwd()
differentially_abundant_species <- plotDiffAbund(
DESeq_RLE_object =Hives_dds_species_v3,
colNums = c(1:8),
level = "species")
plotDiffAbund(
DESeq_RLE_object =Hives_dds_family_v3,
colNums = c(1:8),
level = "family")
getwd()
setwd(here::here())
plotDiffAbund(
DESeq_RLE_object =Hives_dds_family_v3,
colNums = c(1:8),
level = "family")
differentially_abundant_families
differentially_abundant_families
differentially_abundant_genera
plotDiffAbund(
DESeq_RLE_object =Hives_dds_family_v3,
colNums = c(1:8),
level = "family")
getTaxonomy("9606",desiredTaxa = "species",'accessionTaxa.sql')
getwd()
getwd()
library(taxonomizr)
getTaxonomy("9606",desiredTaxa = "species",'accessionTaxa.sql')
getwd()
getTaxonomy("9606",desiredTaxa = "species",'accessionTaxa.sql')
getTaxonomy("9606",desiredTaxa = "species",here('accessionTaxa.sql'))
list.files(getwd())
here::here()
getTaxonomy("9606",desiredTaxa = "species",'accessionTaxa.sql')
library(taxonomizr)
getTaxonomy("9606",desiredTaxa = "species",'accessionTaxa.sql')
getwd()
setwd(here::here())
getTaxonomy("9606",desiredTaxa = "species",'accessionTaxa.sql')
getwd()
list.files(getwd())
generate_species <- getTaxonomy(TaxonomicIDs_species,desiredTaxa = level, 'accessionTaxa.sql')
generate_species <- getTaxonomy(TaxonomicIDs_species,desiredTaxa = "family", 'accessionTaxa.sql')
generate_species <- getTaxonomy(TaxonomicIDs_species,desiredTaxa = "family", 'accessionTaxa.sql')
generate_species <- getTaxonomy(TaxonomicIDs_species,desiredTaxa = "family", 'accessionTaxa.sql')
generate_species <- getTaxonomy(TaxonomicIDs_species,desiredTaxa = "family", 'accessionTaxa.sql')
getwd()
getwd()
getwd()
getwd()
getwd()
getwd()
here::here()
library(taxonomizr)
getTaxonomy("9606",sqlFile = "nameNode.sqlite",desiredTaxa = "family",'accessionTaxa.sql')
?getTaxonomy()
getTaxonomy("9606",sqlFile = "accessionTaxa.sql",desiredTaxa = "family")
library(taxonomizr)
getwd()
prepareDatabase()
getTaxonomy("9606",sqlFile = "nameNode.sqlite",desiredTaxa = "family")
prepareDatabase()
library(taxonomizr)
prepareDatabase()
library(taxonomizr)
getTaxonomy("9606",sqlFile = "nameNode.sqlite",desiredTaxa = "family")
getTaxonomy("9606", 'accesionTaxa.sql',desiredTaxa = "family")
getTaxonomy("9606", 'accessionTaxa.sql',desiredTaxa = "family")
getwd()
prepareDatabase()
if (!require('tidyverse')) install.packages('tidyverse'); library('tidyverse')
if (!require('purrr')) install.packages('purrr'); library('purrr')
if (!require('taxonomizr')) install.packages('taxonomizr'); library('taxonomizr')
if (!require('here')) install.packages('here'): library('here')
# Taxonomizr will return the taxonomy for each species. However, this requires that a database is built locally (requires 60 GB of space).
# prepareDatabase('accessionTaxa.sql')
# This process will take over 3 hours on a regular laptop/PC.
# from here: and simply unzip it in the cloned repository. Place it at the top level, honeyDSM-seq and not in the subfolders.
if (!require('BIEN')) install.packages('BIEN'); library('BIEN')
if (!require('pheatmap')) install.packages('pheatmap'): library('pheatmap')
library(dplyr)
normalised_counts_methodseason <- read.csv("./Figures/Figure_6/Data_fig_6/normalised_counts_methodseason_species.csv")[,-1]
normalised_counts_methodseason <- normalised_counts_methodseason %>% round(.,digits = 0)
Relative_abundance_species <- normalised_counts_methodseason[,-1] %>% mutate_all(.,funs((./sum(.))*100))
rownames(Relative_abundance_species) <- normalised_counts_methodseason$Taxonomic_ID
# Add the taxonomy
classification_phyloseq <- function(df) {
taxids <- rownames(df)
Phylum <- as.character(getTaxonomy(taxids, desiredTaxa = "phylum", sqlFile = 'nameNode.sqlite'))
Superkingdom <- as.character(getTaxonomy(taxids, desiredTaxa = "superkingdom", sqlFile = 'nameNode.sqlite'))
Kingdom <- as.character(getTaxonomy(taxids, desiredTaxa = "kingdom", sqlFile = 'nameNode.sqlite'))
Class <- as.character(getTaxonomy(taxids, desiredTaxa = "class", sqlFile = 'nameNode.sqlite'))
Order <- as.character(getTaxonomy(taxids, desiredTaxa = "order", sqlFile = 'nameNode.sqlite'))
Family <- as.character(getTaxonomy(taxids,desiredTaxa = "family", sqlFile = 'nameNode.sqlite'))
Genus <- as.character(getTaxonomy(taxids,desiredTaxa = "genus", sqlFile = 'nameNode.sqlite'))
Species <- as.character(getTaxonomy(taxids,desiredTaxa = "species", sqlFile = 'nameNode.sqlite'))
cbind(df, Superkingdom, Kingdom, Phylum, Class, Order, Family, Genus, Species)
}
Relative_abundance_species_with_taxonomy <- classification_phyloseq(Relative_abundance_species)
# Extract the plants
Relative_abundance_plants <- Relative_abundance_species_with_taxonomy %>% tibble::rownames_to_column(var = "Taxonomic_ID") %>% filter(Phylum == "Streptophyta",) %>% tibble::column_to_rownames("Taxonomic_ID")
# Get pairs per method
# First function removes the zeros across the samples
remove_zero_across_samples <- function(df){
df_x <- df %>% select_if(.,is.numeric)
df_y <- df %>% select(.,"Species")
df_z <- cbind(df_x,df_y) %>% remove_rownames(.) %>% dplyr::filter(rowSums(dplyr::select(., -Species)) > 0)
}
get_pair_method <- function(df,number=is.numeric){
df_1 <- df %>% dplyr::select(.,contains(number)) %>% remove_rownames()
df_2 <- df %>% dplyr::select(.,Species) %>% remove_rownames()
df_3 <- cbind(df_1,df_2) %>% remove_zero_across_samples()
return(df_3)
}
Hive4_plants <- Relative_abundance_plants %>% get_pair_method(number = "4") # 125 plants
Hive5_plants <- Relative_abundance_plants %>% get_pair_method(number = "5") # 173
Hive6_plants <- Relative_abundance_plants %>% get_pair_method(number = "6") # 107
Hive7_plants <- Relative_abundance_plants %>% get_pair_method(number = "7") # 67
# Now we look up some traits in the BIEN database. This will take a while, be patient !
Plants_BIEN <- function(df, Hive = is.numeric, method = c("DirectSM_H","SM_H")){
x=paste(Hive)
y=paste(method)
plant_names <- df %>% dplyr::pull(.,Species) %>% as.character()
flower_col <- plant_names %>% BIEN::BIEN_trait_traitbyspecies(species = ., trait = "flower color", all.taxonomy = FALSE, political.boundaries = FALSE, source.citation = FALSE) %>%  dplyr::select(c(scrubbed_species_binomial,trait_value))
flowering_begin <- plant_names %>% BIEN::BIEN_trait_traitbyspecies(species = ., trait = "plant flowering begin", all.taxonomy = FALSE, political.boundaries = FALSE, source.citation = FALSE) %>% dplyr::rename(flowering_begin_month = trait_value) %>% dplyr::filter(unit == "month") %>%  dplyr::select(c(scrubbed_species_binomial,flowering_begin_month))
flowering_duration <- plant_names %>% BIEN::BIEN_trait_traitbyspecies(species = ., trait = "plant flowering duration", all.taxonomy = FALSE, political.boundaries = FALSE, source.citation = FALSE) %>% dplyr::rename(flowering_duration_months = trait_value) %>% dplyr::select(c(scrubbed_species_binomial,flowering_duration_months))
new_lst <- list(flower_col = flower_col, flowering_begin = flowering_begin,flowering_duration = flowering_duration)
df_new <- new_lst %>% purrr::reduce(.,full_join, by = "scrubbed_species_binomial") %>% dplyr::rename(.,Species = scrubbed_species_binomial) %>% tibble::add_column(.,Method = factor(paste0(y,x)))
}
#Get plant data at species level
Hive4_DSM_plants <- Hive4_plants %>% Plants_BIEN(Hive = 4,method = "DirectSM_H")
Hive4_SM_plants <- Hive4_plants %>% Plants_BIEN(Hive = 4,method = "SM_H")
Hive5_DSM_plants <- Hive5_plants %>% Plants_BIEN(Hive = 5,method = "DirectSM_H")
Hive5_SM_plants <- Hive5_plants %>% Plants_BIEN(Hive = 5,method = "SM_H")
Hive6_DSM_plants <- Hive6_plants %>% Plants_BIEN(Hive = 6,method = "DirectSM_H")
Hive6_SM_plants <- Hive6_plants %>% Plants_BIEN(Hive = 6,method = "SM_H")
Hive7_DSM_plants <- Hive7_plants %>% Plants_BIEN(Hive = 7,method = "DirectSM_H")
Hive7_SM_plants <- Hive7_plants %>% Plants_BIEN(Hive = 7,method = "SM_H")
# First we will look for occurence data in the specified location. It works with either species or genus, just specify!
occurence_data <- function(df,level=c("species","genus")){
if(level=="species")
return({
plant_names <- df %>% dplyr::pull(.,Species) %>% as.character()
plant_names %>% BIEN::BIEN_occurrence_box(species = .,min.lat = 33, max.lat =44, min.long = -9, max.long = 36.1, natives.only = FALSE, native.status = TRUE, cultivated = TRUE) %>% dplyr::select(c(scrubbed_species_binomial,country)) %>% dplyr::rename(Species = scrubbed_species_binomial)
})
if(level=="genus")
return({
plant_names <- df %>% dplyr::pull(.,Genus) %>% as.character()
plant_names %>% BIEN::BIEN_occurrence_box(genus = .,min.lat = 33, max.lat =44, min.long = -9, max.long = 36.1, natives.only = FALSE, native.status = TRUE, cultivated = TRUE) %>% dplyr::select(c(scrubbed_species_binomial,country)) %>% dplyr::rename(Species = scrubbed_species_binomial)
})
}
species_in_med <- function(df) {
plant_names <- df %>% dplyr::pull(.,Species) %>% as.character()
occurrence <- df %>% occurence_data(level="species") %>% dplyr::select(.,Species) %>% unique() %>% dplyr::pull()
df_1 <- plant_names %in% occurrence %>% as.data.frame() %>% dplyr::rename(.,Occurs_in_med = .) %>% cbind(plant_names,.)
}
View(Hive4_DSM_plants)
Hive4_DSM_plants %>% dplyr::pull(.,Species)
Hive4_med_DSM <- Hive4_DSM_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "DirectSM_H4")
Hive4_med_SM <- Hive4_SM_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H4")
Hive5_med_DSM <- Hive5_DSM_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "DirectSM_H5")
Hive5_med_SM <- Hive5_SM_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H5")
Hive6_med_DSM <- Hive6_DSM_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "DirectSM_H6")
Hive6_med_SM <- Hive6_SM_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H6")
Hive7_med_DSM <- Hive7_DSM_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "DirectSM_H7")
Hive7_med_SM <- Hive7_SM_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H7")
data_med_presence <- rbind(Hive4_med_DSM,Hive4_med_SM,Hive5_med_DSM,Hive5_med_SM,Hive6_med_DSM,Hive6_med_SM,Hive7_med_DSM,Hive7_med_SM)
data_med_presence$Method <- factor(data_med_presence$Method, levels = c("DirectSM_H4","SM_H4","DirectSM_H5","SM_H5","DirectSM_H6", "SM_H6","DirectSM_H7","SM_H7"))
plot_med_presence <- ggplot() + geom_bar(aes(y = n, x = Method, fill= Occurs_in_med), data = data_med_presence, stat='identity', width=0.3, position = "fill") + theme_bw() + labs(y = "Present in the Mediterranean (%)", x="",title = "Plant species in the Mediterranean") + theme(text = element_text(size=12),axis.text.x = element_text(angle=45, hjust=1, size = 10)) + scale_fill_manual("Plant occurs in the Mediterranean", values=c("#ff9966","#3377ff")) + scale_y_continuous(labels = c(0,25,50,75,100)) + scale_x_discrete(labels = x_axis_labels)
x_axis_labels <- c("SM H4","SM H5","SM H6","SM H7","DirectSM H4","DirectSM H5","DirectSM H6","DirectSM H7")
plot_med_presence <- ggplot() + geom_bar(aes(y = n, x = Method, fill= Occurs_in_med), data = data_med_presence, stat='identity', width=0.3, position = "fill") + theme_bw() + labs(y = "Present in the Mediterranean (%)", x="",title = "Plant species in the Mediterranean") + theme(text = element_text(size=12),axis.text.x = element_text(angle=45, hjust=1, size = 10)) + scale_fill_manual("Plant occurs in the Mediterranean", values=c("#ff9966","#3377ff")) + scale_y_continuous(labels = c(0,25,50,75,100)) + scale_x_discrete(labels = x_axis_labels)
plot_med_presence
View(data_med_presence)
normalised_counts_methodseason$Taxonomic_ID[normalised_counts_methodseason$DirectSM_H4 == 0]
normalised_counts_methodseason$Taxonomic_ID[normalised_counts_methodseason$DirectSM_H4 == 1]
Relative_abundance_plants$Species[Relative_abundance_plants$DirectSM_H4 == 0]
trial <- Relative_abundance_plants$Species[Relative_abundance_plants$DirectSM_H4 != 0]
trial
trial <- as.character(Relative_abundance_plants$Species[Relative_abundance_plants$DirectSM_H4 != 0])
trial
species_in_med <- function(df) {
occurrence <- df %>% occurence_data(level="species") %>% dplyr::select(.,Species) %>% unique() %>% dplyr::pull()
df_1 <- plant_names %in% occurrence %>% as.data.frame() %>% dplyr::rename(.,Occurs_in_med = .) %>% cbind(plant_names,.)
}
trial2 <- species_in_med(trial)
species_in_med <- function(df) {
occurrence <- df %>% occurence_data(level="species") %>% dplyr::select(.,Species) %>% unique() %>% dplyr::pull()
df_1 <- plant_names %in% occurrence %>% as.data.frame() %>% dplyr::rename(.,Occurs_in_med = .) %>% cbind(plant_names,.)
}
trial2 <- species_in_med(trial)
trial <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$DirectSM_H4 != 0]))
View(trial)
colnames(trial) <- c("Species")
species_in_med <- function(df) {
plant_names <- df %>% dplyr::pull(.,Species) %>% as.character()
occurrence <- df %>% occurence_data(level="species") %>% dplyr::select(.,Species) %>% unique() %>% dplyr::pull()
df_1 <- plant_names %in% occurrence %>% as.data.frame() %>% dplyr::rename(.,Occurs_in_med = .) %>% cbind(plant_names,.)
}
trial2 <- species_in_med(trial)
View(trial2)
DSMH4_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$DirectSM_H4 != 0]))
colname(DSMH4_plants) <- c("Species")
SMH4_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$SM_H4 != 0]))
colname(DSMH4_plants) <- c("Species")
DSMH5_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$DirectSM_H5 != 0]))
colname(DSMH4_plants) <- c("Species")
SMH5_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$SM_H5 != 0]))
colname(DSMH4_plants) <- c("Species")
DSMH6_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$DirectSM_H6 != 0]))
colname(DSMH4_plants) <- c("Species")
SMH6_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$SM_H6 != 0]))
colname(DSMH4_plants) <- c("Species")
DSMH7_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$DirectSM_H7 != 0]))
colname(DSMH4_plants) <- c("Species")
SMH7_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$SM_H7 != 0]))
colname(DSMH4_plants) <- c("Species")
DSMH4_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$DirectSM_H4 != 0]))
colnames(DSMH4_plants) <- c("Species")
SMH4_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$SM_H4 != 0]))
colnames(DSMH4_plants) <- c("Species")
DSMH5_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$DirectSM_H5 != 0]))
colnames(DSMH4_plants) <- c("Species")
SMH5_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$SM_H5 != 0]))
colnames(DSMH4_plants) <- c("Species")
DSMH6_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$DirectSM_H6 != 0]))
colnames(DSMH4_plants) <- c("Species")
SMH6_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$SM_H6 != 0]))
colnames(DSMH4_plants) <- c("Species")
DSMH7_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$DirectSM_H7 != 0]))
colnames(DSMH4_plants) <- c("Species")
SMH7_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$SM_H7 != 0]))
colnames(DSMH4_plants) <- c("Species")
Hive4_med_DSM <- DSMH4_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "DirectSM_H4")
Hive4_med_SM <- SMH4_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H4")
Hive5_med_DSM <- DSMH5_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "DirectSM_H5")
Hive5_med_SM <- SMH5_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H5")
Hive6_med_DSM <- DSMH6_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "DirectSM_H6")
Hive6_med_SM <- SMH6_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H6")
Hive7_med_DSM <- DSMH7_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "DirectSM_H7")
Hive7_med_SM <- SMH7_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H7")
data_med_presence <- rbind(Hive4_med_DSM,Hive4_med_SM,Hive5_med_DSM,Hive5_med_SM,Hive6_med_DSM,Hive6_med_SM,Hive7_med_DSM,Hive7_med_SM)
data_med_presence$Method <- factor(data_med_presence$Method, levels = c("DirectSM_H4","SM_H4","DirectSM_H5","SM_H5","DirectSM_H6", "SM_H6","DirectSM_H7","SM_H7"))
x_axis_labels <- c("SM H4","SM H5","SM H6","SM H7","DirectSM H4","DirectSM H5","DirectSM H6","DirectSM H7")
plot_med_presence <- ggplot() + geom_bar(aes(y = n, x = Method, fill= Occurs_in_med), data = data_med_presence, stat='identity', width=0.3, position = "fill") + theme_bw() + labs(y = "Present in the Mediterranean (%)", x="",title = "Plant species in the Mediterranean") + theme(text = element_text(size=12),axis.text.x = element_text(angle=45, hjust=1, size = 10)) + scale_fill_manual("Plant occurs in the Mediterranean", values=c("#ff9966","#3377ff")) + scale_y_continuous(labels = c(0,25,50,75,100)) + scale_x_discrete(labels = x_axis_labels)
View(DSMH4_plants)
species_in_med <- function(df) {
plant_names <- df %>% dplyr::pull(.,"Species") %>% as.character()
occurrence <- df %>% occurence_data(level="species") %>% dplyr::select(.,Species) %>% unique() %>% dplyr::pull()
df_1 <- plant_names %in% occurrence %>% as.data.frame() %>% dplyr::rename(.,Occurs_in_med = .) %>% cbind(plant_names,.)
}
Hive4_med_DSM <- DSMH4_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "DirectSM_H4")
View(Hive4_med_DSM)
View(Relative_abundance_plants)
Hive4_med_SM <- SMH4_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H4")
Hive5_med_DSM <- DSMH5_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "DirectSM_H5")
Hive5_med_SM <- SMH5_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H5")
Hive6_med_DSM <- DSMH6_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "DirectSM_H6")
Hive6_med_SM <- SMH6_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H6")
Hive7_med_DSM <- DSMH7_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "DirectSM_H7")
Hive7_med_SM <- SMH7_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H7")
data_med_presence <- rbind(Hive4_med_DSM,Hive4_med_SM,Hive5_med_DSM,Hive5_med_SM,Hive6_med_DSM,Hive6_med_SM,Hive7_med_DSM,Hive7_med_SM)
data_med_presence$Method <- factor(data_med_presence$Method, levels = c("DirectSM_H4","SM_H4","DirectSM_H5","SM_H5","DirectSM_H6", "SM_H6","DirectSM_H7","SM_H7"))
x_axis_labels <- c("SM H4","SM H5","SM H6","SM H7","DirectSM H4","DirectSM H5","DirectSM H6","DirectSM H7")
plot_med_presence <- ggplot() + geom_bar(aes(y = n, x = Method, fill= Occurs_in_med), data = data_med_presence, stat='identity', width=0.3, position = "fill") + theme_bw() + labs(y = "Present in the Mediterranean (%)", x="",title = "Plant species in the Mediterranean") + theme(text = element_text(size=12),axis.text.x = element_text(angle=45, hjust=1, size = 10)) + scale_fill_manual("Plant occurs in the Mediterranean", values=c("#ff9966","#3377ff")) + scale_y_continuous(labels = c(0,25,50,75,100)) + scale_x_discrete(labels = x_axis_labels)
View(SMH4_plants)
DSMH5_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$DirectSM_H5 != 0]))
colnames(DSMH5_plants) <- c("Species")
SMH5_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$SM_H5 != 0]))
colnames(SMH5_plants) <- c("Species")
DSMH6_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$DirectSM_H6 != 0]))
colnames(DSMH6_plants) <- c("Species")
SMH6_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$SM_H6 != 0]))
colnames(SMH6_plants) <- c("Species")
DSMH7_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$DirectSM_H7 != 0]))
colnames(DSMH7_plants) <- c("Species")
SMH7_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$SM_H7 != 0]))
colnames(SMH7_plants) <- c("Species")
Hive4_med_SM <- SMH4_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H4")
Hive5_med_DSM <- DSMH5_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "DirectSM_H5")
Hive5_med_SM <- SMH5_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H5")
Hive6_med_DSM <- DSMH6_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "DirectSM_H6")
Hive6_med_SM <- SMH6_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H6")
Hive7_med_DSM <- DSMH7_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "DirectSM_H7")
Hive7_med_SM <- SMH7_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H7")
colnames(SMH4_plants) <- c("Species")
Hive4_med_SM <- SMH4_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H4")
data_med_presence <- rbind(Hive4_med_DSM,Hive4_med_SM,Hive5_med_DSM,Hive5_med_SM,Hive6_med_DSM,Hive6_med_SM,Hive7_med_DSM,Hive7_med_SM)
data_med_presence$Method <- factor(data_med_presence$Method, levels = c("DirectSM_H4","SM_H4","DirectSM_H5","SM_H5","DirectSM_H6", "SM_H6","DirectSM_H7","SM_H7"))
x_axis_labels <- c("SM H4","SM H5","SM H6","SM H7","DirectSM H4","DirectSM H5","DirectSM H6","DirectSM H7")
plot_med_presence <- ggplot() + geom_bar(aes(y = n, x = Method, fill= Occurs_in_med), data = data_med_presence, stat='identity', width=0.3, position = "fill") + theme_bw() + labs(y = "Present in the Mediterranean (%)", x="",title = "Plant species in the Mediterranean") + theme(text = element_text(size=12),axis.text.x = element_text(angle=45, hjust=1, size = 10)) + scale_fill_manual("Plant occurs in the Mediterranean", values=c("#ff9966","#3377ff")) + scale_y_continuous(labels = c(0,25,50,75,100)) + scale_x_discrete(labels = x_axis_labels)
plot_med_presence
View(SMH4_plants)
ggsave(plot = plot_med_presence, filename = "./Figures/Figure_6/plants_med_non_filtered.pdf", height = 5, width = 6)
View(Relative_abundance_plants)
Relative_abundance_plants <- Relative_abundance_plants %>% mutate_if(., is.numeric,funs(ifelse(. <= 0.001, 0, .)))
Relative_abundance_plants <- Relative_abundance_plants %>% mutate_if(., is.numeric,funs(ifelse(. <= 0.01, 0, .)))
View(Relative_abundance_plants)
Relative_abundance_plants <- Relative_abundance_species_with_taxonomy %>% tibble::rownames_to_column(var = "Taxonomic_ID") %>% filter(Phylum == "Streptophyta",) %>% tibble::column_to_rownames("Taxonomic_ID")
Relative_abundance_plants <- Relative_abundance_plants %>% mutate_if(., is.numeric,funs(ifelse(. <= 0.1, 0, .)))
View(Relative_abundance_plants)
Relative_abundance_plants <- Relative_abundance_species_with_taxonomy %>% tibble::rownames_to_column(var = "Taxonomic_ID") %>% filter(Phylum == "Streptophyta",) %>% tibble::column_to_rownames("Taxonomic_ID")
Relative_abundance_plants <- Relative_abundance_plants %>% mutate_if(., is.numeric,funs(ifelse(. <= 0.005, 0, .)))
DSMH4_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$DirectSM_H4 != 0]))
colnames(DSMH4_plants) <- c("Species")
SMH4_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$SM_H4 != 0]))
colnames(SMH4_plants) <- c("Species")
DSMH5_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$DirectSM_H5 != 0]))
colnames(DSMH5_plants) <- c("Species")
SMH5_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$SM_H5 != 0]))
colnames(SMH5_plants) <- c("Species")
DSMH6_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$DirectSM_H6 != 0]))
colnames(DSMH6_plants) <- c("Species")
SMH6_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$SM_H6 != 0]))
colnames(SMH6_plants) <- c("Species")
DSMH7_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$DirectSM_H7 != 0]))
colnames(DSMH7_plants) <- c("Species")
SMH7_plants <- as.data.frame(as.character(Relative_abundance_plants$Species[Relative_abundance_plants$SM_H7 != 0]))
colnames(SMH7_plants) <- c("Species")
Hive4_med_DSM <- DSMH4_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "DirectSM_H4")
Hive4_med_SM <- SMH4_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H4")
Hive5_med_DSM <- DSMH5_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "DirectSM_H5")
Hive5_med_SM <- SMH5_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H5")
Hive6_med_DSM <- DSMH6_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "DirectSM_H6")
Hive6_med_SM <- SMH6_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H6")
Hive7_med_DSM <- DSMH7_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "DirectSM_H7")
Hive7_med_SM <- SMH7_plants %>% species_in_med(.) %>% dplyr::group_by(Occurs_in_med) %>% dplyr::count() %>% tibble::add_column(.,Method = "SM_H7")
data_med_presence <- rbind(Hive4_med_DSM,Hive4_med_SM,Hive5_med_DSM,Hive5_med_SM,Hive6_med_DSM,Hive6_med_SM,Hive7_med_DSM,Hive7_med_SM)
data_med_presence$Method <- factor(data_med_presence$Method, levels = c("DirectSM_H4","SM_H4","DirectSM_H5","SM_H5","DirectSM_H6", "SM_H6","DirectSM_H7","SM_H7"))
x_axis_labels <- c("SM H4","SM H5","SM H6","SM H7","DirectSM H4","DirectSM H5","DirectSM H6","DirectSM H7")
plot_med_presence <- ggplot() + geom_bar(aes(y = n, x = Method, fill= Occurs_in_med), data = data_med_presence, stat='identity', width=0.3, position = "fill") + theme_bw() + labs(y = "Present in the Mediterranean (%)", x="",title = "Plant species in the Mediterranean") + theme(text = element_text(size=12),axis.text.x = element_text(angle=45, hjust=1, size = 10)) + scale_fill_manual("Plant occurs in the Mediterranean", values=c("#ff9966","#3377ff")) + scale_y_continuous(labels = c(0,25,50,75,100)) + scale_x_discrete(labels = x_axis_labels)
plot_med_presence
plot_med_presence <- ggplot() + geom_bar(aes(y = n, x = Method, fill= Occurs_in_med), data = data_med_presence, stat='identity', width=0.3, position = "fill") + theme_bw() + labs(y = "Present in the Mediterranean (%)", x="",title = "Plant species in the Mediterranean") + theme(text = element_text(size=12),axis.text.x = element_text(angle=45, hjust=1, size = 10)) + scale_fill_manual("Plant occurs in the Mediterranean", values=c("#ff9966","#3377ff")) + scale_y_continuous(labels = c(0,25,50,75,100))
plot_med_presence
x_axis_labels <- c("SM H4","DirectSM H4","DirectSM H5","SM H5","DirectSM H6","SM H6","DirectSM H7","SM H7")
plot_med_presence <- ggplot() + geom_bar(aes(y = n, x = Method, fill= Occurs_in_med), data = data_med_presence, stat='identity', width=0.3, position = "fill") + theme_bw() + labs(y = "Present in the Mediterranean (%)", x="",title = "Plant species in the Mediterranean") + theme(text = element_text(size=12),axis.text.x = element_text(angle=45, hjust=1, size = 10)) + scale_fill_manual("Plant occurs in the Mediterranean", values=c("#ff9966","#3377ff")) + scale_y_continuous(labels = c(0,25,50,75,100)) + scale_x_discrete(labels = x_axis_labels)
ggsave(plot = plot_med_presence, filename = "./Figures/Figure_6/plants_med_non_filtered.pdf", height = 5, width = 6)
ggsave(plot = plot_med_presence, filename = "./Figures/Figure_6/plants_med_filtered_abund005percent.pdf", height = 5, width = 6)
