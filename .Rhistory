family_lfc <- match(family_lfc$Family, reordering$treetip)
View(reordering)
family_lfc <- family_lfc[match(family_lfc$Family, reordering$treetip),]
family_lfc <- read.csv("./Output_data/Figure_3_output/family_lfc.csv")[,-1]
direction <- as.data.frame(direction)
colnames(direction) <- c("Direction")
family_lfc$Family <- dQuote(family_lfc$Family)
family_lfc$Family <- as.character(family_lfc$Family)
family_lfc <- family_lfc[match(family_lfc$Family, reordering$treetip),]
family_lfc <- read.csv("./Output_data/Figure_3_output/family_lfc.csv")[,-1]
direction <- as.data.frame(direction)
colnames(direction) <- c("Direction")
family_lfc$Family <- dQuote(family_lfc$Family)
family_lfc$Family <- as.character(family_lfc$Family)
library(tidyverse)
family_lfc$Family <- str_remove(family_lfc$Family, pattern = " ")
reordering$treetip <- str_remove(reordering$treetip, pattern = "\"")
reordering <- as.data.frame(tree1$tip.label)
colnames(reordering) <- c("treetip")
reordering$treetip <- as.character(reordering$treetip)
reordering$treetip <- str_remove(reordering$treetip, pattern = "\\""")
reordering <- as.data.frame(tree1$tip.label)
colnames(reordering) <- c("treetip")
reordering$treetip <- as.character(reordering$treetip)
reordering$treetip <- noquote(reordering$treetip)
reordering$treetip <- noquote(reordering$treetip)
View(reordering)
reordering$treetip <- str_remove(reordering$treetip, "\"")
reordering$treetip <- str_remove(reordering$treetip, "\"")
family_lfc2 <- family_lfc[match(family_lfc$Family, reordering$treetip),]
View(family_lfc2)
family_lfc <- read.csv("./Output_data/Figure_3_output/family_lfc.csv")[,-1]
direction <- as.data.frame(direction)
colnames(direction) <- c("Direction")
family_lfc$Family <- as.character(family_lfc$Family)
family_lfc$Family <- str_remove(family_lfc$Family, pattern = " ")
family_lfc2 <- family_lfc[match(family_lfc$Family, reordering$treetip),]
?match
family_lfc2 <- family_lfc[match(reordering$treetip, family_lfc$Family),]
family_lfc_plot <- as.data.frame(family_lfc$log2FoldChange)
colnames(family_lfc_plot) <- c("Log2FoldChange")
rownames(family_lfc_plot) <- tree1$tip.label
p5 <- p4 + gheatmap(p4, family_lfc_plot)
if (!require('tidyverse')) install.packages('tidyverse'); library('tidyverse')
if (!require('purrr')) install.packages('purrr'); library('purrr')
if (!require('taxonomizr')) install.packages('taxonomizr'); library('taxonomizr')
if (!require('here')) install.packages('here'): library('here')
# Taxonomizr will return the taxonomy for each species. However, this requires that a database is built locally (requires 60 GB of space).
# prepareDatabase('nameNode.sqlite')
# This process will take over 3 hours on a regular laptop/PC. Othherwise, please consider dowloading the zipped file
# from here: and simply unzip it in the cloned repository. Place it at the top level, honeyDSM-seq and not in the subfolders.
if (!require('DESeq2')) install.packages('DESeq2'); library('DESeq2')
if (!require('pheatmap')) install.packages('pheatmap'): library('pheatmap')
if (!require('ggtree')) install.packages('ggtree'): library('ggtree')
p5 <- p4 + gheatmap(p4, family_lfc_plot)
library(viridis)
p5 <- p4 + gheatmap(p4, family_lfc_plot) + scale_fill_viridis_d()
p5 <- gheatmap(p4, family_lfc_plot) + scale_fill_viridis_d()
p5
p5 <- gheatmap(p4, family_lfc_plot)
p5
rownames(direction) <- tree1$tip.label
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, colnames_offset_y = 0, width = 0.3, colnames = F)
p5
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, colnames_offset_y = 0, width = 0.1, colnames = F)
p5
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, colnames_offset_y = 1, width = 0.1, colnames = F)
p5
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, colnames_offset_y = 1, width = 0.3, colnames = F)
p5
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, offset = 1, width = 0.3, colnames = F)
p5
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, offset = 0.8, width = 0.3, colnames = F)
p5
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, offset = 0.8, width = 0.1, colnames = F)
p5
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, offset = 0.8, width = 0.2, colnames = F)
p5
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, offset = 0.6, width = 0.2, colnames = F)
p5
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, offset = 0.6, width = 0.15, colnames = F)
p5
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, offset = 0.7, width = 0.15, colnames = F)
p5
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, offset = 0.7, width = 0.15, colnames = F) + scale_fill_brewer(type = "div", palette = "PiYG")
p5
family_lfc_plot
View(family_lfc_plot)
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, offset = 0.7, width = 0.15, colnames = F) + scale_color_brewer(type = "div", palette = "PiYG")
p5
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, offset = 0.7, width = 0.15, colnames = F) + scale_fill_distiller()
p5
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, offset = 0.7, width = 0.15, colnames = F) + scale_fill_distiller(palette = "PiYG")
p5
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, offset = 0.7, width = 0.15, colnames = F) + scale_fill_distiller(palette = "PiYG") + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = guide_colourbar(barwidth = 5, ticks = FALSE, title = "Log2FC", title.position = "top"))
p5
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, offset = 0.7, width = 0.15, colnames = F) + scale_fill_distiller(palette = "PiYG", limits = c(-2,2)) + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = guide_colourbar(barwidth = 5, ticks = FALSE, title = "Log2FC", title.position = "top"))
p5
p6 <- p5 + new_scale_fill()
p7 <- gheatmap(p6, direction, colnames_angle=0, offset = 0.7, width = 0.15, colnames = F) + scale_fill_brewer(palette = "Set1") + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = guide_colourbar(barwidth = 5, ticks = FALSE, title = "Log2FC", title.position = "top"))
p7
p7 <- gheatmap(p6, direction, colnames_angle=0, offset = 1.5, width = 0.15, colnames = F) + scale_fill_brewer(palette = "Set1") + theme(legend.position = "bottom", legend.title.align = 0.5)
p7
p7 <- gheatmap(p6, direction, colnames_angle=0, offset = 1.5, width = 0.15, colnames = F) + scale_fill_brewer(palette = "Set1") + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = "legend")
p7
padj_values_family <- family_lfc$padj
padj_values_family <- as.data.frame(family_lfc$padj)
colnames(padj_values_family) <- padjvalue
colnames(padj_values_family) <- c("padjvalue")
rownames(padj_values_family) <- tree1$tip.label
direction <- ifelse(family_lfc$log2FoldChange < 0, "Higher DirectSM","Higher SM")
rownames(direction) <- tree1$tip.label
# Extract the direction of the log2fc. For the data I have used the contrast DirectSM vs SM.
# Thereofre, positive values mean SM > DSM and negative values DSM > SM
direction <- as.data.frame(ifelse(family_lfc$log2FoldChange < 0, "Higher DirectSM","Higher SM"))
View(direction)
colnames(direction) <- c("Direction")
rownames(direction) <- tree1$tip.label
View(direction)
# We can now build the heatmap
p2 <- gheatmap(circ2, padj_values_family, colnames_angle=0, colnames_offset_y = 0, width = 0.3, colnames = F) + scale_fill_distiller(palette = "RdGy", limits=c(0,1)) + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = guide_colourbar(barwidth = 5, ticks = FALSE, title = "p-value (adjusted)", title.position = "top"))
p2
# We can now build the heatmap
p2 <- gheatmap(circ2, padj_values_family, colnames_angle=0, colnames_offset_y = 0, width = 0.3, colnames = F) + scale_fill_distiller(palette = "RdGy", limits=c(0,1), direction = -1) + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = guide_colourbar(barwidth = 5, ticks = FALSE, title = "p-value (adjusted)", title.position = "top"))
p2
p2 <- gheatmap(circ2, padj_values_family, colnames_angle=0, colnames_offset_y = 0, width = 0.3, colnames = F) + scale_fill_distiller(palette = "RdGy", limits=c(0,1), direction = -1)
p2
p2 <- gheatmap(circ2, padj_values_family, colnames_angle=0, colnames_offset_y = 0, width = 0.3, colnames = F) + scale_fill_distiller(palette = "RdGy", limits=c(0,1), direction = 1)
p2
p2 <- gheatmap(circ2, padj_values_family, colnames_angle=0, colnames_offset_y = 0, width = 0.3, colnames = F) + scale_fill_distiller(palette = "RdGy", limits=c(0,1), direction = 1) + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = guide_colourbar(barwidth = 5, ticks = FALSE, title = "p-value (adjusted)", title.position = "top"))
p2
tree1$node.label[486]
View(tree1)
tree1[["node.label"]]
p3 <- p2  + geom_cladelabel(node = 486, color ="#CC4678FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 543, color = "#73D055FF", align = T, label = "", barsize = 3, offset = 0) + geom_cladelabel(node = 578, color = "#0D0887FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 479, color = "#F0F921FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 575, color = "#ad05f5", align = T, label = "", barsize = 3)
p3
tree1$tip.label[486]
tree1$tip.label[486,]
tree1$tip.label[486,]
expt <- as.data.frame(tree1$tip.label)
View(expt)
rownames(padj_values_family) <- tree1$node.label
rownames(padj_values_family) <- tree1$tip.label
expt <- as.data.frame(tree1$node.label)
# Add annotation to the Domains as we've done so far
p3 <- p2  + geom_cladelabel(node = 101, color ="#CC4678FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 543, color = "#73D055FF", align = T, label = "", barsize = 3, offset = 0) + geom_cladelabel(node = 578, color = "#0D0887FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 479, color = "#F0F921FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 575, color = "#ad05f5", align = T, label = "", barsize = 3)
p3
# Add annotation to the Domains as we've done so far
p3 <- p2  + geom_cladelabel(node = "Bacteria", color ="#CC4678FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 543, color = "#73D055FF", align = T, label = "", barsize = 3, offset = 0) + geom_cladelabel(node = 578, color = "#0D0887FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 479, color = "#F0F921FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 575, color = "#ad05f5", align = T, label = "", barsize = 3)
p3
# Add annotation to the Domains as we've done so far
p3 <- p2  + geom_cladelabel(node = "Viruses", color ="#CC4678FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 543, color = "#73D055FF", align = T, label = "", barsize = 3, offset = 0) + geom_cladelabel(node = 578, color = "#0D0887FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 479, color = "#F0F921FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 575, color = "#ad05f5", align = T, label = "", barsize = 3)
p3
# Add annotation to the Domains as we've done so far
p3 <- p2  + geom_cladelabel(node = 9, color ="#CC4678FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 543, color = "#73D055FF", align = T, label = "", barsize = 3, offset = 0) + geom_cladelabel(node = 578, color = "#0D0887FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 479, color = "#F0F921FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 575, color = "#ad05f5", align = T, label = "", barsize = 3)
p3
expt <- as.data.frame(tree1$tip.label)
tree1[["edge"]]
tree1[["edge.length"]]
tree1[["edge"]]
# We can now build the heatmap
p2 <- gheatmap(circ2, padj_values_family, colnames_angle=0, colnames_offset_y = 0, width = 0.3, colnames = F) + scale_fill_distiller(palette = "RdGy", limits=c(0,1), direction = 1) + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = guide_colourbar(barwidth = 5, ticks = FALSE, title = "p-value (adjusted)", title.position = "top")) + geom_tiplab()
p2
circ2
circ2 + geom_tiplab()
plot54 <- circ2 + geom_tiplab()
ggsave(plot = plot54, filename = "./Figures/withnames.pdf")
ggsave(plot = plot54, filename = "./Figures/withnames.pdf", height = 15, width = 15)
# We can now build the heatmap
p2 <- gheatmap(circ2, padj_values_family, colnames_angle=0, colnames_offset_y = 0, width = 0.3, colnames = F) + scale_fill_distiller(palette = "RdGy", limits=c(0,1), direction = 1) + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = guide_colourbar(barwidth = 5, ticks = FALSE, title = "p-value (adjusted)", title.position = "top"))
p2
p3 <- p2  + geom_cladelabel(node = 9, color ="#CC4678FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 543, color = "#73D055FF", align = T, label = "", barsize = 3, offset = 0) + geom_cladelabel(node = 578, color = "#0D0887FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 479, color = "#F0F921FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 575, color = "#ad05f5", align = T, label = "", barsize = 3)
p3
p3 <- p2  + geom_cladelabel(node = 486, color ="#CC4678FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 543, color = "#73D055FF", align = T, label = "", barsize = 3, offset = 0) + geom_cladelabel(node = 578, color = "#0D0887FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 479, color = "#F0F921FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 575, color = "#ad05f5", align = T, label = "", barsize = 3)
p3
p3 <- p2  + geom_cladelabel(node = 486, color ="#CC4678FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 543, color = "#73D055FF", align = T, label = "", barsize = 3, offset = 0) + geom_cladelabel(node = 578, color = "#0D0887FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 479, color = "#F0F921FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 575, color = "#ad05f5", align = T, label = "", barsize = 3)
p4 <- p3 + new_scale_fill()
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, offset = 0.7, width = 0.15, colnames = F) + scale_fill_distiller(palette = "PiYG", limits = c(-2,2)) + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = guide_colourbar(barwidth = 5, ticks = FALSE, title = "Log2FC", title.position = "top"))
p6 <- p5 + new_scale_fill()
p7 <- gheatmap(p6, direction, colnames_angle=0, offset = 1.5, width = 0.15, colnames = F) + scale_fill_brewer(palette = "Set1") + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = "legend")
p7
p2 <- gheatmap(circ2, padj_values_family, colnames_angle=0, colnames_offset_y = 0, width = 0.5, colnames = F) + scale_fill_distiller(palette = "RdGy", limits=c(0,1), direction = 1) + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = guide_colourbar(barwidth = 5, ticks = FALSE, title = "p-value (adjusted)", title.position = "top"))
# Add annotation to the Domains as we've done so far
p3 <- p2  + geom_cladelabel(node = 486, color ="#CC4678FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 543, color = "#73D055FF", align = T, label = "", barsize = 3, offset = 0) + geom_cladelabel(node = 578, color = "#0D0887FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 479, color = "#F0F921FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 575, color = "#ad05f5", align = T, label = "", barsize = 3)
p4 <- p3 + new_scale_fill()
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, offset = 0.7, width = 0.15, colnames = F) + scale_fill_distiller(palette = "PiYG", limits = c(-2,2)) + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = guide_colourbar(barwidth = 5, ticks = FALSE, title = "Log2FC", title.position = "top"))
p6 <- p5 + new_scale_fill()
p7 <- gheatmap(p6, direction, colnames_angle=0, offset = 1.5, width = 0.15, colnames = F) + scale_fill_brewer(palette = "Set1") + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = "legend")
p7
p2 <- gheatmap(circ2, padj_values_family, colnames_angle=0, offset = 0.3, width = 0.3, colnames = F) + scale_fill_distiller(palette = "RdGy", limits=c(0,1), direction = 1) + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = guide_colourbar(barwidth = 5, ticks = FALSE, title = "p-value (adjusted)", title.position = "top"))
# Add annotation to the Domains as we've done so far
p3 <- p2  + geom_cladelabel(node = 486, color ="#CC4678FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 543, color = "#73D055FF", align = T, label = "", barsize = 3, offset = 0) + geom_cladelabel(node = 578, color = "#0D0887FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 479, color = "#F0F921FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 575, color = "#ad05f5", align = T, label = "", barsize = 3)
p4 <- p3 + new_scale_fill()
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, offset = 0.7, width = 0.15, colnames = F) + scale_fill_distiller(palette = "PiYG", limits = c(-2,2)) + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = guide_colourbar(barwidth = 5, ticks = FALSE, title = "Log2FC", title.position = "top"))
p6 <- p5 + new_scale_fill()
p7 <- gheatmap(p6, direction, colnames_angle=0, offset = 1.5, width = 0.15, colnames = F) + scale_fill_brewer(palette = "Set1") + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = "legend")
p7
p2 <- gheatmap(circ2, padj_values_family, colnames_angle=0, offset = 0, width = 0.3, colnames = F) + scale_fill_distiller(palette = "RdGy", limits=c(0,1), direction = 1) + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = guide_colourbar(barwidth = 5, ticks = FALSE, title = "p-value (adjusted)", title.position = "top"))
# Add annotation to the Domains as we've done so far
p3 <- p2  + geom_cladelabel(node = 486, color ="#CC4678FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 543, color = "#73D055FF", align = T, label = "", barsize = 3, offset = 0) + geom_cladelabel(node = 578, color = "#0D0887FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 479, color = "#F0F921FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 575, color = "#ad05f5", align = T, label = "", barsize = 3)
p4 <- p3 + new_scale_fill()
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, offset = 0.7, width = 0.15, colnames = F) + scale_fill_distiller(palette = "PiYG", limits = c(-2,2)) + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = guide_colourbar(barwidth = 5, ticks = FALSE, title = "Log2FC", title.position = "top"))
p6 <- p5 + new_scale_fill()
p7 <- gheatmap(p6, direction, colnames_angle=0, offset = 1.5, width = 0.15, colnames = F) + scale_fill_brewer(palette = "Set1") + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = "legend")
p7
ggsave(p7, filename="circlularplot_families.pdf", device = "pdf", width = 15, height = 15, path = "./Figures/Figure_3/")
p2 <- gheatmap(circ2, padj_values_family, colnames_angle=0, offset = 0, width = 0.4, colnames = F) + scale_fill_distiller(palette = "RdGy", limits=c(0,1), direction = 1) + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = guide_colourbar(barwidth = 5, ticks = FALSE, title = "p-value (adjusted)", title.position = "top"))
# Add annotation to the Domains as we've done so far
p3 <- p2  + geom_cladelabel(node = 486, color ="#CC4678FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 543, color = "#73D055FF", align = T, label = "", barsize = 3, offset = 0) + geom_cladelabel(node = 578, color = "#0D0887FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 479, color = "#F0F921FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 575, color = "#ad05f5", align = T, label = "", barsize = 3)
p4 <- p3 + new_scale_fill()
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, offset = 0.7, width = 0.15, colnames = F) + scale_fill_distiller(palette = "PiYG", limits = c(-2,2)) + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = guide_colourbar(barwidth = 5, ticks = FALSE, title = "Log2FC", title.position = "top"))
p6 <- p5 + new_scale_fill()
p7 <- gheatmap(p6, direction, colnames_angle=0, offset = 1.5, width = 0.15, colnames = F) + scale_fill_brewer(palette = "Set1") + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = "legend")
p7
ggsave(p7, filename="circlularplot_families.pdf", device = "pdf", width = 15, height = 15, path = "./Figures/Figure_3/")
p3 <- p2  + geom_cladelabel(node = 486, color ="#7570B3", align = T, label = "", barsize = 3) + geom_cladelabel(node = 543, color = "#", align = T, label = "", barsize = 3, offset = 0) + geom_cladelabel(node = 578, color = "#0D0887FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 479, color = "#F0F921FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 575, color = "#ad05f5", align = T, label = "", barsize = 3)
p3
Domain = c(Bacteria = "#E6AB02", Viruses = "#eb53a1", Eukaryota = "#", Viridiplantae = "#1B9E77", Archaea = "#D95F02"),
# Add annotation to the Domains as we've done so far
p3 <- p2  + geom_cladelabel(node = 486, color ="#7570B3", align = T, label = "", barsize = 3) + geom_cladelabel(node = 543, color = "#E6AB02", align = T, label = "", barsize = 3, offset = 0) + geom_cladelabel(node = 578, color = "#0D0887FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 479, color = "#F0F921FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 575, color = "#ad05f5", align = T, label = "", barsize = 3)
p3
Domain = c(Bacteria = "#E6AB02", Viruses = "#eb53a1", Eukaryota = "#", Viridiplantae = "#1B9E77", Archaea = "#D95F02"),
# Add annotation to the Domains as we've done so far
p3 <- p2  + geom_cladelabel(node = 486, color ="#7570B3", align = T, label = "", barsize = 3) + geom_cladelabel(node = 543, color = "#1B9E77", align = T, label = "", barsize = 3, offset = 0) + geom_cladelabel(node = 578, color = "#E6AB02", align = T, label = "", barsize = 3) + geom_cladelabel(node = 479, color = "#F0F921FF", align = T, label = "", barsize = 3) + geom_cladelabel(node = 575, color = "#ad05f5", align = T, label = "", barsize = 3)
p3
Domain = c(Bacteria = "#E6AB02", Viruses = "#eb53a1", Eukaryota = "#", Viridiplantae = "#1B9E77", Archaea = "#D95F02"),
# Add annotation to the Domains as we've done so far
p3 <- p2  + geom_cladelabel(node = 486, color ="#7570B3", align = T, label = "", barsize = 3) + geom_cladelabel(node = 543, color = "#1B9E77", align = T, label = "", barsize = 3, offset = 0) + geom_cladelabel(node = 578, color = "#E6AB02", align = T, label = "", barsize = 3) + geom_cladelabel(node = 479, color = "#eb53a1", align = T, label = "", barsize = 3) + geom_cladelabel(node = 575, color = "#ad05f5", align = T, label = "", barsize = 3)
p3
Domain = c(Bacteria = "#E6AB02", Viruses = "#eb53a1", Eukaryota = "#", Viridiplantae = "#1B9E77", Archaea = "#D95F02"),
# Add annotation to the Domains as we've done so far
p3 <- p2  + geom_cladelabel(node = 486, color ="#7570B3", align = T, label = "", barsize = 3) + geom_cladelabel(node = 543, color = "#1B9E77", align = T, label = "", barsize = 3, offset = 0) + geom_cladelabel(node = 578, color = "#E6AB02", align = T, label = "", barsize = 3) + geom_cladelabel(node = 479, color = "#eb53a1", align = T, label = "", barsize = 3) + geom_cladelabel(node = 575, color = "#D95F02", align = T, label = "", barsize = 3)
p3
p4 <- p3 + new_scale_fill()
p5 <- gheatmap(p4, family_lfc_plot, colnames_angle=0, offset = 0.7, width = 0.15, colnames = F) + scale_fill_distiller(palette = "PiYG", limits = c(-2,2)) + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = guide_colourbar(barwidth = 5, ticks = FALSE, title = "Log2FC", title.position = "top"))
p6 <- p5 + new_scale_fill()
p7 <- gheatmap(p6, direction, colnames_angle=0, offset = 1.5, width = 0.15, colnames = F) + scale_fill_brewer(palette = "Set1") + theme(legend.position = "bottom", legend.title.align = 0.5) + guides(fill = "legend")
p7
ggsave(p7, filename="circlularplot_families.pdf", device = "pdf", width = 15, height = 15, path = "./Figures/Figure_3/")
family_lfc_replace_plant <- family_lfc
family_lfc_replace_plant$Superkingdom <- ifelse(family_lfc_replace_plant$Superkingdom == "Eukaryota",
ifelse(na.omit(family_lfc_replace_plant$Superkingdom) == "Viridiplantae", "Viridiplantae","Eukaryota"), "Eukaryota")
View(family_lfc_replace_plant)
family_lfc_replace_plant$Superkingdom <- ifelse(family_lfc_replace_plant$Superkingdom == "Eukaryota",
ifelse(na.omit(family_lfc_replace_plant$Superkingdom) == "Viridiplantae", "Viridiplantae","Eukaryota"), family_lfc_replace_plant$Superkingdom)
View(family_lfc_replace_plant)
View(get_super_kingdom_or_plant)
family_lfc_replace_plant$Superkingdom <- ifelse(na.omit(family_lfc_replace_plant$Kingdom == "Viridiplantae"),
"Viridiplantae", family_lfc_replace_plant$Superkingdom)
family_lfc_replace_plant$Superkingdom <- ifelse(family_lfc_replace_plant$Kingdom == "Viridiplantae",
"Viridiplantae", family_lfc_replace_plant$Superkingdom)
family_lfc_replace_plant <- family_lfc
family_lfc_replace_plant$Kingdom <- as.character(family_lfc_replace_plant$Kingdom)
View(family_lfc_replace_plant)
family_lfc_replace_plant$Kingdom <- replace_na(family_lfc_replace_plant$Kingdom, "Not found")
family_lfc_replace_plant$Superkingdom <- ifelse(family_lfc_replace_plant$Kingdom == "Viridiplantae",
"Viridiplantae", family_lfc_replace_plant$Superkingdom)
View(family_lfc_replace_plant)
family_lfc_replace_plant <- family_lfc
family_lfc_replace_plant$Kingdom <- as.character(family_lfc_replace_plant$Kingdom)
family_lfc_replace_plant$Kingdom <- replace_na(family_lfc_replace_plant$Kingdom, "Not found")
family_lfc_replace_plant$Superkingdom <- ifelse(family_lfc_replace_plant$Kingdom == "Viridiplantae",
family_lfc_replace_plant$Kingdom, family_lfc_replace_plant$Superkingdom)
View(family_lfc_replace_plant)
family_lfc_replace_plant <- family_lfc
family_lfc_replace_plant$Kingdom <- as.character(family_lfc_replace_plant$Kingdom)
family_lfc_replace_plant$Kingdom <- replace_na(family_lfc_replace_plant$Kingdom, "Unknown")
family_lfc_replace_plant$Superkingdom <- ifelse(family_lfc_replace_plant$Kingdom == "Viridiplantae",
family_lfc_replace_plant$Kingdom, family_lfc_replace_plant$Superkingdom)
View(family_lfc_replace_plant)
family_lfc_replace_plant$Superkingdom2 <- family_lfc_replace_plant$Superkingdom
family_lfc_replace_plant$Superkingdom <- ifelse(family_lfc_replace_plant$Kingdom == "Viridiplantae",
family_lfc_replace_plant$Kingdom, family_lfc_replace_plant$Superkingdom2)
View(family_lfc_replace_plant)
family_lfc_replace_plant$Superkingdom <- ifelse(family_lfc_replace_plant$Kingdom == "Viridiplantae",
family_lfc_replace_plant$Kingdom, as.character(family_lfc_replace_plant$Superkingdom2))
family_lfc_replace_plant$Superkingdom <- ifelse(family_lfc_replace_plant$Kingdom == "Viridiplantae",
family_lfc_replace_plant$Kingdom, "other"))
family_lfc_replace_plant$Superkingdom <- ifelse(family_lfc_replace_plant$Kingdom == "Viridiplantae",
family_lfc_replace_plant$Kingdom, "other")
family_lfc_replace_plant <- family_lfc
family_lfc_replace_plant$Kingdom <- as.character(family_lfc_replace_plant$Kingdom)
family_lfc_replace_plant$Kingdom <- replace_na(family_lfc_replace_plant$Kingdom, "Unknown")
family_lfc_replace_plant$Superkingdom2 <- family_lfc_replace_plant$Superkingdom
family_lfc_replace_plant$Superkingdom2 <- family_lfc_replace_plant$Superkingdom
family_lfc_replace_plant$Superkingdom3 <- ifelse(family_lfc_replace_plant$Kingdom == "Viridiplantae",
family_lfc_replace_plant$Kingdom, family_lfc_replace_plant$Superkingdom2)
family_lfc_replace_plant$Superkingdom3 <- ifelse(family_lfc_replace_plant$Kingdom == "Viridiplantae",
as.character(family_lfc_replace_plant$Kingdom), as.character(family_lfc_replace_plant$Superkingdom2))
family_lfc_replace_plant <- family_lfc
family_lfc_replace_plant$Kingdom <- as.character(family_lfc_replace_plant$Kingdom)
family_lfc_replace_plant$Kingdom <- replace_na(family_lfc_replace_plant$Kingdom, "Unknown")
family_lfc_replace_plant$Superkingdom <- ifelse(family_lfc_replace_plant$Kingdom == "Viridiplantae",
as.character(family_lfc_replace_plant$Kingdom), as.character(family_lfc_replace_plant$Superkingdom))
family_lfc_threshold <- subset(family_lfc_replace_plant, abs(family_lfc_replace_plant$log2FoldChange) >= 1)
View(family_lfc_threshold)
family_lfc_threshold_total <- family_lfc_threshold %>% group_by(Superkingdom) %>% summarise(Number = n())
View(family_lfc_threshold_total)
family_lfc_threshold_total <- as.data.frame(family_lfc_threshold_total)
View(family_lfc_threshold_total)
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number)) + geom_bar(stat="identity")
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number)) + geom_bar(stat="identity") + coord_flip()
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number)) + geom_bar(stat="identity") + coord_flip() + theme_minimal()
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number)) + geom_bar(stat="identity") + coord_flip() + theme_minimal() + scale_fill_manual(name = c("Domain"), breaks = c("Bacteria","Viridiplantae","Eukaryota","Viruses") ,labels = c("Bacteria","Viridiplantae","Eukaryota","Viruses"), values = c("#E6AB02","#1B9E77","#7570B3","#eb53a1"))
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number)) + geom_bar(stat="identity") + coord_flip() + theme_minimal() + scale_fill_manual(values = c("#E6AB02","#1B9E77","#7570B3","#eb53a1"))
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#1B9E77","#7570B3","#eb53a1"))+ theme_minimal()
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#1B9E77","#7570B3","#eb53a1"))+ theme_minimal()
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#1B9E77","#7570B3","#eb53a1"))+ theme_minimal()
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#1B9E77","#7570B3","#eb53a1"))+ theme_minimal()
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal()
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none")
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none") + geom_text(aes(label=Number), vjust =0)
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none") + geom_text(aes(label=Number), vjust =1)
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none") + geom_text(aes(label=Number), vjust = 15)
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none") + geom_text(aes(label=Number), vjust = 0, hjust=1)
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none") + geom_text(aes(label=Number), vjust = 0, hjust=5)
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none") + geom_text(aes(label=Number), vjust = 0, hjust=20)
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none") + geom_text(aes(label=Number), vjust = 0, hjust=-2)
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none", axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + geom_text(aes(label=Number), vjust = 0, hjust=-2)
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none", axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + geom_text(aes(label=Number), vjust = 0, hjust=-2, size = 20)
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none", axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + geom_text(aes(label=Number), vjust = 0, hjust=-2, size = 15)
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none", axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + geom_text(aes(label=Number), vjust = 0, hjust=-2, size = 13)
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none", axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + geom_text(10)
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none", axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + geom_text(aes(label=Number), vjust = 0, hjust=-2, size = 10)
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none", axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + geom_text(aes(label=Number), vjust = 0, hjust=-2, size = 10) + xlim(c(0,14))
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none", axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + geom_text(aes(label=Number), vjust = 0, hjust=-2, size = 10) + ylim(c(0,14))
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none", axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank()) + geom_text(aes(label=Number), vjust = 0, hjust=-2, size = 10) + ylim(c(0,11))
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none", axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.y = element_text(size=8)) + geom_text(aes(label=Number), vjust = 0, hjust=-2, size = 10) + ylim(c(0,11))
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none", axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.ticks.x = element_text(size=8)) + geom_text(aes(label=Number), vjust = 0, hjust=-2, size = 10) + ylim(c(0,11))
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none", axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y = element_text(size=8)) + geom_text(aes(label=Number), vjust = 0, hjust=-2, size = 10) + ylim(c(0,11))
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none", axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y = element_text(size=15)) + geom_text(aes(label=Number), vjust = 0, hjust=-2, size = 10) + ylim(c(0,11))
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none", axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y = element_text(size=15), plot.title = element_text(size=18)) + geom_text(aes(label=Number), vjust = 0, hjust=-2, size = 10) + ylim(c(0,11))
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none", axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y = element_text(size=15), plot.title = element_text(size=18)) + geom_text(aes(label=Number), vjust = 0, hjust=-2, size = 10) + ylim(c(0,11)) + labs(title="Distribution of most variable Families")
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none", axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y = element_text(size=15), plot.title = element_text(size=18)) + geom_text(aes(label=Number), vjust = 0, hjust=-2, size = 10) + ylim(c(0,11)) + labs(title="Distribution of most variable Families", y = "")
lfc_bars
lfc_bars <- ggplot(family_lfc_threshold_total, aes(x=Superkingdom, y= Number, fill=Superkingdom)) + geom_bar(stat="identity") + coord_flip() + scale_fill_manual(values = c("#E6AB02","#7570B3","#1B9E77","#eb53a1"))+ theme_minimal() + theme(legend.position = "none", axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y = element_text(size=15), plot.title = element_text(size=18)) + geom_text(aes(label=Number), vjust = 0, hjust=-2, size = 10) + ylim(c(0,11)) + labs(title="Distribution of most variable Families", x = "")
lfc_bars
ggsave(plot = lfc_bars, filename = "./Figures/Figure_3/distribution_families.pdf")
?degPatterns
View(normalised_species_plants)
plotDiffAbund <- function(colNums, DESeq_RLE_object, title, level = c("species","genus","family","order","phylum"), pathcsv) {
dds_object <- DESeq(DESeq_RLE_object, test = "LRT", reduced = ~Method, full = ~Method+Season)
rld <- rlog(dds_object, blind=F)
results <- subset(results(dds_object), padj < 0.05)
results_export <- as.data.frame(rownames(results))
colnames(results_export) <- c("Taxonomic_ID")
write.csv(results_export,pathcsv)
# make the lists
upgenes <- rownames(head(results[ order( results$log2FoldChange ), ], n=1000))
downgenes <- rownames(head(results[ order( -results$log2FoldChange ), ], n=1000))
# this gives us the rows we want
rows <- match(upgenes, row.names(rld))
mat <- assay(rld)[rows,c(1:8)]
mat <- mat - rowMeans(mat)
TaxonomicIDs_species <- as.numeric(rownames((mat)))
Taxid_taxonomy_species <- as.data.frame(get_super_kingdom_or_plant(TaxonomicIDs_species))
Taxonomic_IDs_dataframe_species <- as.data.frame(TaxonomicIDs_species)
generate_species <- getTaxonomy(TaxonomicIDs_species,desiredTaxa = level, sqlFile = 'nameNode.sqlite')
generate_species = as.data.frame(generate_species)
generate_species[,1] = as.character(generate_species[,1])
annotationrows_species1 <- bind_cols(Taxid_taxonomy_species,Taxonomic_IDs_dataframe_species,generate_species)
colnames(annotationrows_species1) <- c("Domain", "Taxonomic_ID", level)
annotationrows_species1 = annotationrows_species1[,-2]
annotationrows_species1 <- tibble::column_to_rownames(annotationrows_species1, var = level)
rownames(mat) <- generate_species[,1]
# the labels are hard coded at the moment :(
df <- as.data.frame(colData(rld)[c("Season")])
pheatmap(mat, fontsize=15, annotation_colors = ann_colors, annotation_row = annotationrows_species1, cluster_rows = FALSE, show_rownames = TRUE, height = 100, angle_col = "270", cluster_cols = TRUE, show_colnames = TRUE, border_color = NA, annotation_col = df, labels_col = c("DirectSM H4","DirectSM H5","DirectSM H6" ,"DirectSM H7","SM H4", "SM H5","SM H6","SM H7"), scale = 'row')
}
if (!require('tidyverse')) install.packages('tidyverse'); library('tidyverse')
if (!require('purrr')) install.packages('purrr'); library('purrr')
if (!require('taxonomizr')) install.packages('taxonomizr'); library('taxonomizr')
if (!require('here')) install.packages('here'): library('here')
if (!require('DESeq2')) install.packages('DESeq2'); library('DESeq2')
if (!require('RColorBrewer')) install.packages('RColorBrewer'); library('RColorBrewer')
if (!require('pheatmap')) install.packages('pheatmap'): library('pheatmap')
if (!require('EnhancedVolcano')) BiocManager::install('EnhancedVolcano'): library('EnhancedVolcano')
if (!require("DEGreport")) BiocManager::install("DEGreport"): library('DEGreport')
differentially_abundant_species <- plotDiffAbund(
DESeq_RLE_object =Hives_dds_RLE_species,
colNums = c(1:8),
level = "species", pathcsv = "./Figures/Figure_3/significant_species.csv")
differentially_abundant_genera <- plotDiffAbund(
DESeq_RLE_object =Hives_dds_RLE_genus,
colNums = c(1:8),
level = "genus", pathcsv = "./Figures/Figure_3/significant_genera.csv")
plotDiffAbund <- function(colNums, DESeq_RLE_object, title, level = c("species","genus","family","order","phylum"), pathcsv) {
dds_object <- DESeq(DESeq_RLE_object, test = "LRT", reduced = ~Method, full = ~Method+Season)
rld <- rlog(dds_object, blind=F)
results <- subset(results(dds_object), padj < 0.05)
#results_export <- as.data.frame(rownames(results))
#colnames(results_export) <- c("Taxonomic_ID")
# make the lists
upgenes <- rownames(head(results[ order( results$log2FoldChange ), ], n=1000))
downgenes <- rownames(head(results[ order( -results$log2FoldChange ), ], n=1000))
# this gives us the rows we want
rows <- match(upgenes, row.names(rld))
mat <- assay(rld)[rows,c(1:8)]
mat <- mat - rowMeans(mat)
TaxonomicIDs_species <- as.numeric(rownames((mat)))
Taxid_taxonomy_species <- as.data.frame(get_super_kingdom_or_plant(TaxonomicIDs_species))
Taxonomic_IDs_dataframe_species <- as.data.frame(TaxonomicIDs_species)
generate_species <- getTaxonomy(TaxonomicIDs_species,desiredTaxa = level, sqlFile = 'nameNode.sqlite')
generate_species = as.data.frame(generate_species)
generate_species[,1] = as.character(generate_species[,1])
annotationrows_species1 <- bind_cols(Taxid_taxonomy_species,Taxonomic_IDs_dataframe_species,generate_species)
colnames(annotationrows_species1) <- c("Domain", "Taxonomic_ID", level)
write.csv(annotationrows_species1,pathcsv)
annotationrows_species1 = annotationrows_species1[,-2]
annotationrows_species1 <- tibble::column_to_rownames(annotationrows_species1, var = level)
rownames(mat) <- generate_species[,1]
# the labels are hard coded at the moment :(
df <- as.data.frame(colData(rld)[c("Season")])
pheatmap(mat, fontsize=15, annotation_colors = ann_colors, annotation_row = annotationrows_species1, cluster_rows = FALSE, show_rownames = TRUE, height = 100, angle_col = "270", cluster_cols = TRUE, show_colnames = TRUE, border_color = NA, annotation_col = df, labels_col = c("DirectSM H4","DirectSM H5","DirectSM H6" ,"DirectSM H7","SM H4", "SM H5","SM H6","SM H7"), scale = 'row')
}
differentially_abundant_species <- plotDiffAbund(
DESeq_RLE_object =Hives_dds_RLE_species,
colNums = c(1:8),
level = "species", pathcsv = "./Figures/Figure_3/significant_species.csv")
differentially_abundant_genera <- plotDiffAbund(
DESeq_RLE_object =Hives_dds_RLE_genus,
colNums = c(1:8),
level = "genus", pathcsv = "./Figures/Figure_3/significant_genera.csv")
differentially_abundant_families <- plotDiffAbund(
DESeq_RLE_object =Hives_dds_RLE_family,
colNums = c(1:8),
level = "family",
pathcsv = "./Figures/Figure_3/significant_families.csv")
degCheckFactors(Hives_normalised_counts_species[, 1:8])
degCheckFactors(Hives_normalised_counts_species[, 1:7])
degCheckFactors(Hives_normalised_counts_species[, 1:8])
degQC(Hives_normalised_counts_species, design[["group"]], pvalue = res[["pvalue"]])
res1 <- results(Hives_dds_RLE_species)
res1 <- DESeq(Hives_dds_RLE_species)
?DESeq
res2 <- results(res1)
colData(res1)
degQC(Hives_normalised_counts_species, colData(res1)[["Method"]], pvalue = res2[["pvalue"]])
